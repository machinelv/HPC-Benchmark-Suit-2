2D FOKKER-PLANCK MODEL FOR POWER SYSTEMS (GENERATORS)
(Equilibrium case)

  dp    d[mu(x,y)p]    d[nu(x,y)p]        d^2 p
  -- +  ----------- +  ----------- = f(t) -----
  dt        dx             dy             dy^2

  p(x,y,t) : Probability distribution
  x        : Phase 
  y        : Generator angular speed

  mu(x,y) = O_s(y-1)
  nu(x,y) = (1/2H)[Pm - Pmax sin(x) - D(y-1)]
  f(t)    = (1/2H)^2 (l^2 q)/(lr+1) (1 - exp[-(r+1/l)t])

  where 
    r = D/2H

           [ EV/g1; t < tf
    Pmax = [ 0    ; tf < t < tcl
           [ EV/g2; tcl < t
    g1,g2 are impedance of the power network
    drawing from the generator

  Physical Parameters:
    
    O_s   Synchronous Speed
    H     Inertia constant
    D     Damping constant
    l     Correlation time
    q     Noise strength
    Pm    Mean mechanical power input
    Pmax  Maximum power output
    E     Internal voltage
    V     Terminal voltage
    tf    Fault incident time
    tcl   Clearing time
    g1    Pre-fault impedance
    g2    Post-clearing impedance

This is an equilibrium case where the initial probability density
function consists of a Dirac located at an equilibrium:
x0,y0 such that: mu(x0,y0) = nu(x0,y0) = 0.0

The initial Dirac should not advect and just dissipate at its equi-
librium location depending on physical dissipation.

If the noise (q) is set to zero, then the initial solution is the 
exact solution and one should see machine-zero residuals during
time-integration.

** Note: the initial equilibrium *has* to fall on a grid point and
hence the grid and initial solution should be generated accordingly.
The file to generate the initial solution (aux/init.C) achieves this
by correcting the input Pm value slightly.

The following input files are required:
+ solver.inp    -   General solver parameters
+ boundary.inp  -   Boundary conditions
+ physics.inp   -   Physical parameters 
+ initial.inp   -   Initial solution
                    (can be generated by aux/init.C)

** See hypar/README for other (optional) input files

Notes:-
The code aux/init.C is an example to generate the initial
solution file in the correct format required by the solver. 

For Tecplot users, the file solution.lay is a layout to visualize
the solution (op_file_format should be "tecplot2d" in solver.inp)
Depending on grid size and number of solution files, opening the 
Tecplot layout may take some time.
(Use Animate->Zones to see the evolution of the solution)
