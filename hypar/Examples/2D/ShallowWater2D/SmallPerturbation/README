2D SHALLOW WATER EQUATIONS

  d   [ h   ]   d   [   h*u            ]   d  [     h*v         ]   [   0      ]
  --  [ h*u ] + --  [h*u*u + 0.5*g*h*h ] + -- [    h*u*v        ] = [ -g*h*b_x ]
  dt  [ h*v ]   dx  [   h*u*v          ]   dy [h*v*v + 0.5*g*h*h]   [ -g*h*b_y ]  

  h   - water height
  u   - x-velocity
  v   - y-velocity

  b(x,y) - bottom topography (b_x denotes d[b(x}]/dx)
  g      - acceleration due to gravity

Reference:
  Xing, Y., Shu, C.-W., "High order finite difference WENO 
  schemes with the exact conservation property for the shallow 
  water equations", Journal of Computational Physics, 208, 2005, 
  pp. 206-227. http://dx.doi.org/10.1016/j.jcp.2005.02.006
  Section 5.3

Small Perturbation Propagation:

  This test case verifies the ability of the solver to propagate
  a small perturbation to the equilibrium accurately.

Domain:

  0 <= x,y <= 1.0
  "extrapolate" boundary conditions

Bottom topography:

  b(x,y) = 0.8 exp [ -50 {(x-0.5)^2 + (y-0.5)^2} ]
  
Initial Solution:

  h(x,y) = 1.0 - b(x,y) + 0.01 if 0.05 <= x <= 0.15,
           1.0 - b(x,y)        otherwise
  u(x,y) = 0.0

The following input files are required:
+ solver.inp    -   General solver parameters
+ boundary.inp  -   Boundary conditions
+ physics.inp   -   Physical parameters (advection speed)
+ initial.inp   -   Initial solution (not included, 
                    but can be generated by aux/init.c)

** See hypar/README for other (optional) input files

The code aux/init.c is an example to generate the initial
solution file (initial.inp) in the correct format required 
by the solver. 

Compile and run this code to generate these files.
